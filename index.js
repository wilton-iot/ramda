define(function(){var require = WILTON_requiresync;var module = {exports: {}};var exports = module.exports;
module.exports = {
  F: require('ramda/src/F'),
  T: require('ramda/src/T'),
  __: require('ramda/src/__'),
  add: require('ramda/src/add'),
  addIndex: require('ramda/src/addIndex'),
  adjust: require('ramda/src/adjust'),
  all: require('ramda/src/all'),
  allPass: require('ramda/src/allPass'),
  always: require('ramda/src/always'),
  and: require('ramda/src/and'),
  any: require('ramda/src/any'),
  anyPass: require('ramda/src/anyPass'),
  ap: require('ramda/src/ap'),
  aperture: require('ramda/src/aperture'),
  append: require('ramda/src/append'),
  apply: require('ramda/src/apply'),
  applySpec: require('ramda/src/applySpec'),
  ascend: require('ramda/src/ascend'),
  assoc: require('ramda/src/assoc'),
  assocPath: require('ramda/src/assocPath'),
  binary: require('ramda/src/binary'),
  bind: require('ramda/src/bind'),
  both: require('ramda/src/both'),
  call: require('ramda/src/call'),
  chain: require('ramda/src/chain'),
  clamp: require('ramda/src/clamp'),
  clone: require('ramda/src/clone'),
  comparator: require('ramda/src/comparator'),
  complement: require('ramda/src/complement'),
  compose: require('ramda/src/compose'),
  composeK: require('ramda/src/composeK'),
  composeP: require('ramda/src/composeP'),
  concat: require('ramda/src/concat'),
  cond: require('ramda/src/cond'),
  construct: require('ramda/src/construct'),
  constructN: require('ramda/src/constructN'),
  contains: require('ramda/src/contains'),
  converge: require('ramda/src/converge'),
  countBy: require('ramda/src/countBy'),
  curry: require('ramda/src/curry'),
  curryN: require('ramda/src/curryN'),
  dec: require('ramda/src/dec'),
  defaultTo: require('ramda/src/defaultTo'),
  descend: require('ramda/src/descend'),
  difference: require('ramda/src/difference'),
  differenceWith: require('ramda/src/differenceWith'),
  dissoc: require('ramda/src/dissoc'),
  dissocPath: require('ramda/src/dissocPath'),
  divide: require('ramda/src/divide'),
  drop: require('ramda/src/drop'),
  dropLast: require('ramda/src/dropLast'),
  dropLastWhile: require('ramda/src/dropLastWhile'),
  dropRepeats: require('ramda/src/dropRepeats'),
  dropRepeatsWith: require('ramda/src/dropRepeatsWith'),
  dropWhile: require('ramda/src/dropWhile'),
  either: require('ramda/src/either'),
  empty: require('ramda/src/empty'),
  endsWith: require('ramda/src/endsWith'),
  eqBy: require('ramda/src/eqBy'),
  eqProps: require('ramda/src/eqProps'),
  equals: require('ramda/src/equals'),
  evolve: require('ramda/src/evolve'),
  filter: require('ramda/src/filter'),
  find: require('ramda/src/find'),
  findIndex: require('ramda/src/findIndex'),
  findLast: require('ramda/src/findLast'),
  findLastIndex: require('ramda/src/findLastIndex'),
  flatten: require('ramda/src/flatten'),
  flip: require('ramda/src/flip'),
  forEach: require('ramda/src/forEach'),
  forEachObjIndexed: require('ramda/src/forEachObjIndexed'),
  fromPairs: require('ramda/src/fromPairs'),
  groupBy: require('ramda/src/groupBy'),
  groupWith: require('ramda/src/groupWith'),
  gt: require('ramda/src/gt'),
  gte: require('ramda/src/gte'),
  has: require('ramda/src/has'),
  hasIn: require('ramda/src/hasIn'),
  head: require('ramda/src/head'),
  identical: require('ramda/src/identical'),
  identity: require('ramda/src/identity'),
  ifElse: require('ramda/src/ifElse'),
  inc: require('ramda/src/inc'),
  indexBy: require('ramda/src/indexBy'),
  indexOf: require('ramda/src/indexOf'),
  init: require('ramda/src/init'),
  innerJoin: require('ramda/src/innerJoin'),
  insert: require('ramda/src/insert'),
  insertAll: require('ramda/src/insertAll'),
  intersection: require('ramda/src/intersection'),
  intersectionWith: require('ramda/src/intersectionWith'),
  intersperse: require('ramda/src/intersperse'),
  into: require('ramda/src/into'),
  invert: require('ramda/src/invert'),
  invertObj: require('ramda/src/invertObj'),
  invoker: require('ramda/src/invoker'),
  is: require('ramda/src/is'),
  isEmpty: require('ramda/src/isEmpty'),
  isNil: require('ramda/src/isNil'),
  join: require('ramda/src/join'),
  juxt: require('ramda/src/juxt'),
  keys: require('ramda/src/keys'),
  keysIn: require('ramda/src/keysIn'),
  last: require('ramda/src/last'),
  lastIndexOf: require('ramda/src/lastIndexOf'),
  length: require('ramda/src/length'),
  lens: require('ramda/src/lens'),
  lensIndex: require('ramda/src/lensIndex'),
  lensPath: require('ramda/src/lensPath'),
  lensProp: require('ramda/src/lensProp'),
  lift: require('ramda/src/lift'),
  liftN: require('ramda/src/liftN'),
  lt: require('ramda/src/lt'),
  lte: require('ramda/src/lte'),
  map: require('ramda/src/map'),
  mapAccum: require('ramda/src/mapAccum'),
  mapAccumRight: require('ramda/src/mapAccumRight'),
  mapObjIndexed: require('ramda/src/mapObjIndexed'),
  match: require('ramda/src/match'),
  mathMod: require('ramda/src/mathMod'),
  max: require('ramda/src/max'),
  maxBy: require('ramda/src/maxBy'),
  mean: require('ramda/src/mean'),
  median: require('ramda/src/median'),
  memoize: require('ramda/src/memoize'),
  memoizeWith: require('ramda/src/memoizeWith'),
  merge: require('ramda/src/merge'),
  mergeAll: require('ramda/src/mergeAll'),
  mergeDeepLeft: require('ramda/src/mergeDeepLeft'),
  mergeDeepRight: require('ramda/src/mergeDeepRight'),
  mergeDeepWith: require('ramda/src/mergeDeepWith'),
  mergeDeepWithKey: require('ramda/src/mergeDeepWithKey'),
  mergeWith: require('ramda/src/mergeWith'),
  mergeWithKey: require('ramda/src/mergeWithKey'),
  min: require('ramda/src/min'),
  minBy: require('ramda/src/minBy'),
  modulo: require('ramda/src/modulo'),
  multiply: require('ramda/src/multiply'),
  nAry: require('ramda/src/nAry'),
  negate: require('ramda/src/negate'),
  none: require('ramda/src/none'),
  not: require('ramda/src/not'),
  nth: require('ramda/src/nth'),
  nthArg: require('ramda/src/nthArg'),
  o: require('ramda/src/o'),
  objOf: require('ramda/src/objOf'),
  of: require('ramda/src/of'),
  omit: require('ramda/src/omit'),
  once: require('ramda/src/once'),
  or: require('ramda/src/or'),
  over: require('ramda/src/over'),
  pair: require('ramda/src/pair'),
  partial: require('ramda/src/partial'),
  partialRight: require('ramda/src/partialRight'),
  partition: require('ramda/src/partition'),
  path: require('ramda/src/path'),
  pathEq: require('ramda/src/pathEq'),
  pathOr: require('ramda/src/pathOr'),
  pathSatisfies: require('ramda/src/pathSatisfies'),
  pick: require('ramda/src/pick'),
  pickAll: require('ramda/src/pickAll'),
  pickBy: require('ramda/src/pickBy'),
  pipe: require('ramda/src/pipe'),
  pipeK: require('ramda/src/pipeK'),
  pipeP: require('ramda/src/pipeP'),
  pluck: require('ramda/src/pluck'),
  prepend: require('ramda/src/prepend'),
  product: require('ramda/src/product'),
  project: require('ramda/src/project'),
  prop: require('ramda/src/prop'),
  propEq: require('ramda/src/propEq'),
  propIs: require('ramda/src/propIs'),
  propOr: require('ramda/src/propOr'),
  propSatisfies: require('ramda/src/propSatisfies'),
  props: require('ramda/src/props'),
  range: require('ramda/src/range'),
  reduce: require('ramda/src/reduce'),
  reduceBy: require('ramda/src/reduceBy'),
  reduceRight: require('ramda/src/reduceRight'),
  reduceWhile: require('ramda/src/reduceWhile'),
  reduced: require('ramda/src/reduced'),
  reject: require('ramda/src/reject'),
  remove: require('ramda/src/remove'),
  repeat: require('ramda/src/repeat'),
  replace: require('ramda/src/replace'),
  reverse: require('ramda/src/reverse'),
  scan: require('ramda/src/scan'),
  sequence: require('ramda/src/sequence'),
  set: require('ramda/src/set'),
  slice: require('ramda/src/slice'),
  sort: require('ramda/src/sort'),
  sortBy: require('ramda/src/sortBy'),
  sortWith: require('ramda/src/sortWith'),
  split: require('ramda/src/split'),
  splitAt: require('ramda/src/splitAt'),
  splitEvery: require('ramda/src/splitEvery'),
  splitWhen: require('ramda/src/splitWhen'),
  startsWith: require('ramda/src/startsWith'),
  subtract: require('ramda/src/subtract'),
  sum: require('ramda/src/sum'),
  symmetricDifference: require('ramda/src/symmetricDifference'),
  symmetricDifferenceWith: require('ramda/src/symmetricDifferenceWith'),
  tail: require('ramda/src/tail'),
  take: require('ramda/src/take'),
  takeLast: require('ramda/src/takeLast'),
  takeLastWhile: require('ramda/src/takeLastWhile'),
  takeWhile: require('ramda/src/takeWhile'),
  tap: require('ramda/src/tap'),
  test: require('ramda/src/test'),
  times: require('ramda/src/times'),
  toLower: require('ramda/src/toLower'),
  toPairs: require('ramda/src/toPairs'),
  toPairsIn: require('ramda/src/toPairsIn'),
  toString: require('ramda/src/toString'),
  toUpper: require('ramda/src/toUpper'),
  transduce: require('ramda/src/transduce'),
  transpose: require('ramda/src/transpose'),
  traverse: require('ramda/src/traverse'),
  trim: require('ramda/src/trim'),
  tryCatch: require('ramda/src/tryCatch'),
  type: require('ramda/src/type'),
  unapply: require('ramda/src/unapply'),
  unary: require('ramda/src/unary'),
  uncurryN: require('ramda/src/uncurryN'),
  unfold: require('ramda/src/unfold'),
  union: require('ramda/src/union'),
  unionWith: require('ramda/src/unionWith'),
  uniq: require('ramda/src/uniq'),
  uniqBy: require('ramda/src/uniqBy'),
  uniqWith: require('ramda/src/uniqWith'),
  unless: require('ramda/src/unless'),
  unnest: require('ramda/src/unnest'),
  until: require('ramda/src/until'),
  update: require('ramda/src/update'),
  useWith: require('ramda/src/useWith'),
  values: require('ramda/src/values'),
  valuesIn: require('ramda/src/valuesIn'),
  view: require('ramda/src/view'),
  when: require('ramda/src/when'),
  where: require('ramda/src/where'),
  whereEq: require('ramda/src/whereEq'),
  without: require('ramda/src/without'),
  xprod: require('ramda/src/xprod'),
  zip: require('ramda/src/zip'),
  zipObj: require('ramda/src/zipObj'),
  zipWith: require('ramda/src/zipWith')
};

return module.exports;});
